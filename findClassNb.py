# -*- coding: utf-8 -*-
"""
/***************************************************************************
 ClassNumber
                                 A QGIS plugin
 reasonable class number
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2021-06-21
        git sha              : $Format:%H$
        copyright            : (C) 2021 by Gianna Persichini
        email                : gimap@mail.de
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""
from qgis.PyQt.QtCore import QSettings, QTranslator, QCoreApplication
from qgis.PyQt.QtGui import QIcon
from qgis.PyQt.QtWidgets import QAction, QFileDialog  # added
from qgis.core import QgsProject, Qgis  # added

# Initialize Qt resources from file resources.py
from .resources import *
# Import the code for the dialog
from .findClassNb_dialog import ClassNumberDialog
import os.path


class ClassNumber:
    """QGIS Plugin Implementation."""

    def __init__(self, iface):
        """Constructor.

        :param iface: An interface instance that will be passed to this class
            which provides the hook by which you can manipulate the QGIS
            application at run time.
        :type iface: QgsInterface
        """
        # Save reference to the QGIS interface
        self.iface = iface
        # initialize plugin directory
        self.plugin_dir = os.path.dirname(__file__)
        # initialize locale
        locale = QSettings().value('locale/userLocale')[0:2]
        locale_path = os.path.join(
            self.plugin_dir,
            'i18n',
            'ClassNumber_{}.qm'.format(locale))

        if os.path.exists(locale_path):
            self.translator = QTranslator()
            self.translator.load(locale_path)
            QCoreApplication.installTranslator(self.translator)

        # Declare instance attributes
        self.actions = []
        self.menu = self.tr(u'&find class number')

        # Check if plugin was started the first time in current QGIS session
        # Must be set in initGui() to survive plugin reloads
        self.first_start = None

    # noinspection PyMethodMayBeStatic
    def tr(self, message):
        """Get the translation for a string using Qt translation API.

        We implement this ourselves since we do not inherit QObject.

        :param message: String for translation.
        :type message: str, QString

        :returns: Translated version of message.
        :rtype: QString
        """
        # noinspection PyTypeChecker,PyArgumentList,PyCallByClass
        return QCoreApplication.translate('ClassNumber', message)


    def add_action(
        self,
        icon_path,
        text,
        callback,
        enabled_flag=True,
        add_to_menu=True,
        add_to_toolbar=True,
        status_tip=None,
        whats_this=None,
        parent=None):
        """Add a toolbar icon to the toolbar.

        :param icon_path: Path to the icon for this action. Can be a resource
            path (e.g. ':/plugins/foo/bar.png') or a normal file system path.
        :type icon_path: str

        :param text: Text that should be shown in menu items for this action.
        :type text: str

        :param callback: Function to be called when the action is triggered.
        :type callback: function

        :param enabled_flag: A flag indicating if the action should be enabled
            by default. Defaults to True.
        :type enabled_flag: bool

        :param add_to_menu: Flag indicating whether the action should also
            be added to the menu. Defaults to True.
        :type add_to_menu: bool

        :param add_to_toolbar: Flag indicating whether the action should also
            be added to the toolbar. Defaults to True.
        :type add_to_toolbar: bool

        :param status_tip: Optional text to show in a popup when mouse pointer
            hovers over the action.
        :type status_tip: str

        :param parent: Parent widget for the new action. Defaults None.
        :type parent: QWidget

        :param whats_this: Optional text to show in the status bar when the
            mouse pointer hovers over the action.

        :returns: The action that was created. Note that the action is also
            added to self.actions list.
        :rtype: QAction
        """

        icon = QIcon(icon_path)
        action = QAction(icon, text, parent)
        action.triggered.connect(callback)
        action.setEnabled(enabled_flag)

        if status_tip is not None:
            action.setStatusTip(status_tip)

        if whats_this is not None:
            action.setWhatsThis(whats_this)

        if add_to_toolbar:
            # Adds plugin icon to Plugins toolbar
            self.iface.addToolBarIcon(action)

        if add_to_menu:
            self.iface.addPluginToMenu(
                self.menu,
                action)

        self.actions.append(action)

        return action

    def initGui(self):
        """Create the menu entries and toolbar icons inside the QGIS GUI."""

        icon_path = ':/plugins/findClassNb/icon.png'
        self.add_action(
            icon_path,
            text=self.tr(u'VisAq class nb'),
            callback=self.run,
            parent=self.iface.mainWindow())

        # will be set False in run()
        self.first_start = True


    def unload(self):
        """Removes the plugin menu item and icon from QGIS GUI."""
        for action in self.actions:
            self.iface.removePluginMenu(
                self.tr(u'&find class number'),
                action)
            self.iface.removeToolBarIcon(action)


    def run(self):
        """Run method that performs all the real work"""

        # Create the dialog with elements (after translation) and keep reference
        # Only create GUI ONCE in callback, so that it will only load when the plugin is started
        if self.first_start == True:
            self.first_start = False
            self.dlg = ClassNumberDialog()

        layers = QgsProject.instance().layerTreeRoot().children()  # Fetch the currently loaded layers
        # slot 1
        self.dlg.cb_inVector.clear()  # Clear the contents of the comboBox from previous runs
        self.dlg.cb_inVector.addItems([layer.name() for layer in layers])  # Populate the comboBox with names of all the loaded layers
        # slot 2
        self.dlg.cb_inVector_2.clear()  # Clear the contents of the comboBox from previous runs
        self.dlg.cb_inVector_2.addItems([layer.name() for layer in layers])  # Populate the comboBox with names of all the loaded layers
        # slot 3
        self.dlg.cb_inVector_3.clear()  # Clear the contents of the comboBox from previous runs
        self.dlg.cb_inVector_3.addItems([layer.name() for layer in layers])  # Populate the comboBox with names of all the loaded layers
        # slot 4
        self.dlg.cb_inVector_4.clear()  # Clear the contents of the comboBox from previous runs
        self.dlg.cb_inVector_4.addItems([layer.name() for layer in layers])  # Populate the comboBox with names of all the loaded layers
        # slot 5
        self.dlg.cb_inVector_5.clear()  # Clear the contents of the comboBox from previous runs
        self.dlg.cb_inVector_5.addItems([layer.name() for layer in layers])  # Populate the comboBox with names of all the loaded layers
        # slot 6
        self.dlg.cb_inVector_6.clear()  # Clear the contents of the comboBox from previous runs
        self.dlg.cb_inVector_6.addItems([layer.name() for layer in layers])  # Populate the comboBox with names of all the loaded layers
        # slot 7
        self.dlg.cb_inVector_7.clear()  # Clear the contents of the comboBox from previous runs
        self.dlg.cb_inVector_7.addItems([layer.name() for layer in layers])  # Populate the comboBox with names of all the loaded layers
        # slot 8
        self.dlg.cb_inVector_8.clear()  # Clear the contents of the comboBox from previous runs
        self.dlg.cb_inVector_8.addItems([layer.name() for layer in layers])  # Populate the comboBox with names of all the loaded layers
        
        
        
        self.dlg.show()   # show the dialog
        result = self.dlg.exec_() # Run the dialog event loop
        # See if OK was pressed
        
        if result:
            # Do something useful here - delete the line containing pass and
            # substitute with your code.
            
            from PyQt5.QtCore import QVariant
            from qgis.utils import iface
            from qgis.core import QgsPointXY, QgsFeatureRequest, QgsField, QgsWkbTypes, QgsVectorLayer, QgsGeometry
            from shapely.geometry import Point
            from shapely.geometry.polygon import Polygon
            import matplotlib.pyplot as plt
            import matplotlib as mpl
            import numpy as np
            import operator

            #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### ####
            
            def pseudosihouette(boma,bottom_type):  #### make pseudo sihouette function
                    
                    if len(boma[0])>1:
        
                        boma= np.delete(boma,np.where(~boma.any(axis=1))[0], axis=0) # zero rows are excluded
                        boma=1-boma # make pseudo distance to centroids out of probabilities
                        
                        diffvec=np.zeros( [len(boma)] )
                        diffvec[:]=np.nan

                        bottom_type=[i for i in bottom_type if i != 0]
                        bottom_type=np.array(bottom_type)
                        
                        for clas_s in range(1,len(boma[0])+1):
                            
                            idx_vec=np.where(bottom_type == clas_s)
                            idx_vec=np.asarray(idx_vec)
                            idx_vec=idx_vec.flatten()
                            
                            for n in list(range(1,idx_vec.size-1)):
                                
                                test = boma[idx_vec[n],:]
                                test = np.sort(test)
                                diffvec[idx_vec[n]-1]=test[-1]-test[-2] 
                    
                    elif len(boma[0])==0:
                        diffvec=0
                        silhouettescore=0
                    
                    if len(boma[0])>1:
                    
                        # nans at the beginning of the vector leads to total nan-vecs.. so get rid of them before further calculation        
                        nan_array = np.isnan(diffvec); not_nan_array = ~ nan_array; diffvec=diffvec[not_nan_array]
                        diffvec=diffvec/max(diffvec) #norm by maximum distance
                        
                        '''
                        plt.figure(22)
                        plt.plot(diffvec)
                        plt.show()
                        '''
                        
                        silhouettescore=np.nanmean(diffvec)
                        print("one finished :)")
                        return silhouettescore
            
            cnt=0
            if self.dlg.checkBox.isChecked():
                cnt=cnt+1
                selectedLayerIndex = self.dlg.cb_inVector.currentIndex()   # Identify selected layer by its index
                ly_tree_nd = layers[selectedLayerIndex]
                laye_r_1 = ly_tree_nd.layer() # Gives you the layer you have selected in the Layers Panel
                layer_provider_1 = laye_r_1.dataProvider()
                ####
                bottom_type=np.zeros(len(laye_r_1))
                count1=-1
                for fea_t in laye_r_1.getFeatures():
                    count1=count1+1
                    bottom_type[count1]=fea_t['BottomType']

                class_nb=np.unique(bottom_type); class_nb=class_nb[class_nb != 0]
                boma       =np.zeros( [len(laye_r_1),len(class_nb)] )

                count1=-1
                if len(class_nb) == 1:
                    for fea_t in laye_r_1.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                elif len(class_nb) == 2:
                    for fea_t in laye_r_1.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                elif len(class_nb) == 3:
                    for fea_t in laye_r_1.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                elif len(class_nb) == 4:
                    for fea_t in laye_r_1.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                elif len(class_nb) == 5:
                    for fea_t in laye_r_1.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                elif len(class_nb) == 6:
                    for fea_t in laye_r_1.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                elif len(class_nb) == 7:
                    for fea_t in laye_r_1.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                elif len(class_nb) == 8:
                    for fea_t in laye_r_1.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                elif len(class_nb) == 9:
                    for fea_t in laye_r_1.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']
                elif len(class_nb) == 10:
                    for fea_t in laye_r_1.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership']     
                elif len(class_nb) == 11:
                    for fea_t in laye_r_1.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                elif len(class_nb) == 12:
                    for fea_t in laye_r_1.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                elif len(class_nb) == 13:
                    for fea_t in laye_r_1.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                elif len(class_nb) == 14:
                    for fea_t in laye_r_1.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                        boma[count1,13]=fea_t['BottomType14Membership']
                elif len(class_nb) == 15:
                    for fea_t in laye_r_1.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                        boma[count1,13]=fea_t['BottomType14Membership']
                        boma[count1,14]=fea_t['BottomType15Membership']
                        
                sil_score_1=pseudosihouette(boma,bottom_type)
                cnt1=len(class_nb)
                ####
                
            if self.dlg.checkBox_2.isChecked():
                cnt=cnt+1
                selectedLayerIndex = self.dlg.cb_inVector_2.currentIndex()   # Identify selected layer by its index
                ly_tree_nd = layers[selectedLayerIndex]
                laye_r_2 = ly_tree_nd.layer() # Gives you the layer you have selected in the Layers Panel
                layer_provider_2 = laye_r_2.dataProvider()
                ####
                bottom_type=np.zeros(len(laye_r_2))
                count1=-1
                for fea_t in laye_r_2.getFeatures():
                    count1=count1+1
                    bottom_type[count1]=fea_t['BottomType']

                class_nb=np.unique(bottom_type); class_nb=class_nb[class_nb != 0]
                boma       =np.zeros( [len(laye_r_2),len(class_nb)] )

                count1=-1
                if len(class_nb) == 1:
                    for fea_t in laye_r_2.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                elif len(class_nb) == 2:
                    for fea_t in laye_r_2.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                elif len(class_nb) == 3:
                    for fea_t in laye_r_2.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                elif len(class_nb) == 4:
                    for fea_t in laye_r_2.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                elif len(class_nb) == 5:
                    for fea_t in laye_r_2.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                elif len(class_nb) == 6:
                    for fea_t in laye_r_2.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                elif len(class_nb) == 7:
                    for fea_t in laye_r_2.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                elif len(class_nb) == 8:
                    for fea_t in laye_r_2.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                elif len(class_nb) == 9:
                    for fea_t in laye_r_2.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']
                elif len(class_nb) == 10:
                    for fea_t in laye_r_2.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership']     
                elif len(class_nb) == 11:
                    for fea_t in laye_r_2.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                elif len(class_nb) == 12:
                    for fea_t in laye_r_2.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                elif len(class_nb) == 13:
                    for fea_t in laye_r_2.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                elif len(class_nb) == 14:
                    for fea_t in laye_r_2.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                        boma[count1,13]=fea_t['BottomType14Membership']
                elif len(class_nb) == 15:
                    for fea_t in laye_r_2.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                        boma[count1,13]=fea_t['BottomType14Membership']
                        boma[count1,14]=fea_t['BottomType15Membership']        
                        
                sil_score_2=pseudosihouette(boma,bottom_type)
                cnt2=len(class_nb)
                ####
            
            if self.dlg.checkBox_3.isChecked():
                cnt=cnt+1
                selectedLayerIndex = self.dlg.cb_inVector_3.currentIndex()   # Identify selected layer by its index
                ly_tree_nd = layers[selectedLayerIndex]
                laye_r_3 = ly_tree_nd.layer() # Gives you the layer you have selected in the Layers Panel
                layer_provider_3 = laye_r_3.dataProvider()
                ####
                bottom_type=np.zeros(len(laye_r_3))
                count1=-1
                for fea_t in laye_r_3.getFeatures():
                    count1=count1+1
                    bottom_type[count1]=fea_t['BottomType']

                class_nb=np.unique(bottom_type); class_nb=class_nb[class_nb != 0]
                boma       =np.zeros( [len(laye_r_3),len(class_nb)] )

                count1=-1
                if len(class_nb) == 1:
                    for fea_t in laye_r_3.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                elif len(class_nb) == 2:
                    for fea_t in laye_r_3.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                elif len(class_nb) == 3:
                    for fea_t in laye_r_3.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                elif len(class_nb) == 4:
                    for fea_t in laye_r_3.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                elif len(class_nb) == 5:
                    for fea_t in laye_r_3.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                elif len(class_nb) == 6:
                    for fea_t in laye_r_3.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                elif len(class_nb) == 7:
                    for fea_t in laye_r_3.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                elif len(class_nb) == 8:
                    for fea_t in laye_r_3.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                elif len(class_nb) == 9:
                    for fea_t in laye_r_3.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']
                elif len(class_nb) == 10:
                    for fea_t in laye_r_3.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership']     
                elif len(class_nb) == 11:
                    for fea_t in laye_r_3.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                elif len(class_nb) == 12:
                    for fea_t in laye_r_3.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                elif len(class_nb) == 13:
                    for fea_t in laye_r_3.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                elif len(class_nb) == 14:
                    for fea_t in laye_r_3.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                        boma[count1,13]=fea_t['BottomType14Membership']
                elif len(class_nb) == 15:
                    for fea_t in laye_r_3.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                        boma[count1,13]=fea_t['BottomType14Membership']
                        boma[count1,14]=fea_t['BottomType15Membership']   
                        
                sil_score_3=pseudosihouette(boma,bottom_type)
                cnt3=len(class_nb)
                ####
            
            if self.dlg.checkBox_4.isChecked():
                cnt=cnt+1
                
                selectedLayerIndex = self.dlg.cb_inVector_4.currentIndex()   # Identify selected layer by its index
                ly_tree_nd = layers[selectedLayerIndex]
                laye_r_4 = ly_tree_nd.layer() # Gives you the layer you have selected in the Layers Panel
                layer_provider_4 = laye_r_4.dataProvider()
                ####
                bottom_type=np.zeros(len(laye_r_4))
                count1=-1
                for fea_t in laye_r_4.getFeatures():
                    count1=count1+1
                    bottom_type[count1]=fea_t['BottomType']

                class_nb=np.unique(bottom_type); class_nb=class_nb[class_nb != 0]
                boma       =np.zeros( [len(laye_r_4),len(class_nb)] )

                count1=-1
                if len(class_nb) == 1:
                    for fea_t in laye_r_4.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                elif len(class_nb) == 2:
                    for fea_t in laye_r_4.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                elif len(class_nb) == 3:
                    for fea_t in laye_r_4.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                elif len(class_nb) == 4:
                    for fea_t in laye_r_4.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                elif len(class_nb) == 5:
                    for fea_t in laye_r_4.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                elif len(class_nb) == 6:
                    for fea_t in laye_r_4.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                elif len(class_nb) == 7:
                    for fea_t in laye_r_4.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                elif len(class_nb) == 8:
                    for fea_t in laye_r_4.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                elif len(class_nb) == 9:
                    for fea_t in laye_r_4.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']
                elif len(class_nb) == 10:
                    for fea_t in laye_r_4.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership']     
                elif len(class_nb) == 11:
                    for fea_t in laye_r_4.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                elif len(class_nb) == 12:
                    for fea_t in laye_r_4.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                elif len(class_nb) == 13:
                    for fea_t in laye_r_4.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                elif len(class_nb) == 14:
                    for fea_t in laye_r_4.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                        boma[count1,13]=fea_t['BottomType14Membership']
                elif len(class_nb) == 15:
                    for fea_t in laye_r_4.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                        boma[count1,13]=fea_t['BottomType14Membership']
                        boma[count1,14]=fea_t['BottomType15Membership']   
                        
                sil_score_4=pseudosihouette(boma,bottom_type)
                cnt4=len(class_nb)
                ####
            
            if self.dlg.checkBox_5.isChecked():
                cnt=cnt+1
                selectedLayerIndex = self.dlg.cb_inVector_5.currentIndex()   # Identify selected layer by its index
                ly_tree_nd = layers[selectedLayerIndex]
                laye_r_5 = ly_tree_nd.layer() # Gives you the layer you have selected in the Layers Panel
                layer_provider_5 = laye_r_5.dataProvider()
                ####
                bottom_type=np.zeros(len(laye_r_5))
                count1=-1
                for fea_t in laye_r_5.getFeatures():
                    count1=count1+1
                    bottom_type[count1]=fea_t['BottomType']

                class_nb=np.unique(bottom_type); class_nb=class_nb[class_nb != 0]
                boma       =np.zeros( [len(laye_r_5),len(class_nb)] )

                count1=-1
                if len(class_nb) == 1:
                    for fea_t in laye_r_5.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                elif len(class_nb) == 2:
                    for fea_t in laye_r_5.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                elif len(class_nb) == 3:
                    for fea_t in laye_r_5.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                elif len(class_nb) == 4:
                    for fea_t in laye_r_5.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                elif len(class_nb) == 5:
                    for fea_t in laye_r_5.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                elif len(class_nb) == 6:
                    for fea_t in laye_r_5.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                elif len(class_nb) == 7:
                    for fea_t in laye_r_5.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                elif len(class_nb) == 8:
                    for fea_t in laye_r_5.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                elif len(class_nb) == 9:
                    for fea_t in laye_r_5.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']
                elif len(class_nb) == 10:
                    for fea_t in laye_r_5.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership']     
                elif len(class_nb) == 11:
                    for fea_t in laye_r_5.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                elif len(class_nb) == 12:
                    for fea_t in laye_r_5.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                elif len(class_nb) == 13:
                    for fea_t in laye_r_5.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                elif len(class_nb) == 14:
                    for fea_t in laye_r_5.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                        boma[count1,13]=fea_t['BottomType14Membership']
                elif len(class_nb) == 15:
                    for fea_t in laye_r_5.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                        boma[count1,13]=fea_t['BottomType14Membership']
                        boma[count1,14]=fea_t['BottomType15Membership']   
                        
                sil_score_5=pseudosihouette(boma,bottom_type)
                cnt5=len(class_nb)
                ####
            
            if self.dlg.checkBox_6.isChecked():
                cnt=cnt+1
                selectedLayerIndex = self.dlg.cb_inVector_6.currentIndex()   # Identify selected layer by its index
                ly_tree_nd = layers[selectedLayerIndex]
                laye_r_6 = ly_tree_nd.layer() # Gives you the layer you have selected in the Layers Panel
                layer_provider_6 = laye_r_6.dataProvider()
                ####
                bottom_type=np.zeros(len(laye_r_6))
                count1=-1
                for fea_t in laye_r_6.getFeatures():
                    count1=count1+1
                    bottom_type[count1]=fea_t['BottomType']

                class_nb=np.unique(bottom_type); class_nb=class_nb[class_nb != 0]
                boma       =np.zeros( [len(laye_r_6),len(class_nb)] )

                count1=-1
                if len(class_nb) == 1:
                    for fea_t in laye_r_6.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                elif len(class_nb) == 2:
                    for fea_t in laye_r_6.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                elif len(class_nb) == 3:
                    for fea_t in laye_r_6.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                elif len(class_nb) == 4:
                    for fea_t in laye_r_6.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                elif len(class_nb) == 5:
                    for fea_t in laye_r_6.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                elif len(class_nb) == 6:
                    for fea_t in laye_r_6.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                elif len(class_nb) == 7:
                    for fea_t in laye_r_6.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                elif len(class_nb) == 8:
                    for fea_t in laye_r_6.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                elif len(class_nb) == 9:
                    for fea_t in laye_r_6.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']
                elif len(class_nb) == 10:
                    for fea_t in laye_r_6.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership']     
                elif len(class_nb) == 11:
                    for fea_t in laye_r_6.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                elif len(class_nb) == 12:
                    for fea_t in laye_r_6.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                elif len(class_nb) == 13:
                    for fea_t in laye_r_6.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                elif len(class_nb) == 14:
                    for fea_t in laye_r_6.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                        boma[count1,13]=fea_t['BottomType14Membership']
                elif len(class_nb) == 15:
                    for fea_t in laye_r_6.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                        boma[count1,13]=fea_t['BottomType14Membership']
                        boma[count1,14]=fea_t['BottomType15Membership']   
                        
                sil_score_6=pseudosihouette(boma,bottom_type)
                cnt6=len(class_nb)
                ####
            
            if self.dlg.checkBox_7.isChecked():
                cnt=cnt+1
                selectedLayerIndex = self.dlg.cb_inVector_7.currentIndex()   # Identify selected layer by its index
                ly_tree_nd = layers[selectedLayerIndex]
                laye_r_7 = ly_tree_nd.layer() # Gives you the layer you have selected in the Layers Panel
                layer_provider_7 = laye_r_7.dataProvider()
                ####
                bottom_type=np.zeros(len(laye_r_7))
                count1=-1
                for fea_t in laye_r_7.getFeatures():
                    count1=count1+1
                    bottom_type[count1]=fea_t['BottomType']

                class_nb=np.unique(bottom_type); class_nb=class_nb[class_nb != 0]
                boma       =np.zeros( [len(laye_r_7),len(class_nb)] )

                count1=-1
                if len(class_nb) == 1:
                    for fea_t in laye_r_7.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                elif len(class_nb) == 2:
                    for fea_t in laye_r_7.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                elif len(class_nb) == 3:
                    for fea_t in laye_r_7.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                elif len(class_nb) == 4:
                    for fea_t in laye_r_7.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                elif len(class_nb) == 5:
                    for fea_t in laye_r_7.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                elif len(class_nb) == 6:
                    for fea_t in laye_r_7.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                elif len(class_nb) == 7:
                    for fea_t in laye_r_7.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                elif len(class_nb) == 8:
                    for fea_t in laye_r_7.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                elif len(class_nb) == 9:
                    for fea_t in laye_r_7.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']
                elif len(class_nb) == 10:
                    for fea_t in laye_r_7.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership']     
                elif len(class_nb) == 11:
                    for fea_t in laye_r_7.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                elif len(class_nb) == 12:
                    for fea_t in laye_r_7.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                elif len(class_nb) == 13:
                    for fea_t in laye_r_7.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                elif len(class_nb) == 14:
                    for fea_t in laye_r_7.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                        boma[count1,13]=fea_t['BottomType14Membership']
                elif len(class_nb) == 15:
                    for fea_t in laye_r_7.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                        boma[count1,13]=fea_t['BottomType14Membership']
                        boma[count1,14]=fea_t['BottomType15Membership']   
                        
                sil_score_7=pseudosihouette(boma,bottom_type)
                cnt7=len(class_nb)
                ####
            
            if self.dlg.checkBox_8.isChecked():
                cnt=cnt+1
                selectedLayerIndex = self.dlg.cb_inVector_8.currentIndex()   # Identify selected layer by its index
                ly_tree_nd = layers[selectedLayerIndex]
                laye_r_8 = ly_tree_nd.layer() # Gives you the layer you have selected in the Layers Panel
                layer_provider_8 = laye_r_8.dataProvider()
                ####
                bottom_type=np.zeros(len(laye_r_8))
                count1=-1
                for fea_t in laye_r_8.getFeatures():
                    count1=count1+1
                    bottom_type[count1]=fea_t['BottomType']

                class_nb=np.unique(bottom_type); class_nb=class_nb[class_nb != 0]
                boma       =np.zeros( [len(laye_r_8),len(class_nb)] )

                count1=-1
                if len(class_nb) == 1:
                    for fea_t in laye_r_8.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                elif len(class_nb) == 2:
                    for fea_t in laye_r_8.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                elif len(class_nb) == 3:
                    for fea_t in laye_r_8.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                elif len(class_nb) == 4:
                    for fea_t in laye_r_8.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                elif len(class_nb) == 5:
                    for fea_t in laye_r_8.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                elif len(class_nb) == 6:
                    for fea_t in laye_r_8.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                elif len(class_nb) == 7:
                    for fea_t in laye_r_8.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                elif len(class_nb) == 8:
                    for fea_t in laye_r_8.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                elif len(class_nb) == 9:
                    for fea_t in laye_r_8.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']
                elif len(class_nb) == 10:
                    for fea_t in laye_r_8.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership']     
                elif len(class_nb) == 11:
                    for fea_t in laye_r_8.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                elif len(class_nb) == 12:
                    for fea_t in laye_r_8.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                elif len(class_nb) == 13:
                    for fea_t in laye_r_8.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                elif len(class_nb) == 14:
                    for fea_t in laye_r_8.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                        boma[count1,13]=fea_t['BottomType14Membership']
                elif len(class_nb) == 15:
                    for fea_t in laye_r_8.getFeatures():
                        count1=count1+1
                        boma[count1,0]=fea_t['BottomType1Membership']
                        boma[count1,1]=fea_t['BottomType2Membership']
                        boma[count1,2]=fea_t['BottomType3Membership']
                        boma[count1,3]=fea_t['BottomType4Membership']
                        boma[count1,4]=fea_t['BottomType5Membership']
                        boma[count1,5]=fea_t['BottomType6Membership']
                        boma[count1,6]=fea_t['BottomType7Membership']
                        boma[count1,7]=fea_t['BottomType8Membership']
                        boma[count1,8]=fea_t['BottomType9Membership']       
                        boma[count1,9]=fea_t['BottomType10Membership'] 
                        boma[count1,10]=fea_t['BottomType11Membership']
                        boma[count1,11]=fea_t['BottomType12Membership']
                        boma[count1,12]=fea_t['BottomType13Membership']
                        boma[count1,13]=fea_t['BottomType14Membership']
                        boma[count1,14]=fea_t['BottomType15Membership']   
                        
                sil_score_8=pseudosihouette(boma,bottom_type)
                cnt8=len(class_nb)
                ####
            
            
            plt.style.use('seaborn-whitegrid')
            fig, ax = plt.subplots(figsize=(7, 4))
            
            
            if cnt==8:
                plt.plot([cnt1,cnt2,cnt3,cnt4,cnt5,cnt6,cnt7,cnt8],[sil_score_1,sil_score_2,sil_score_3,sil_score_4,sil_score_5,sil_score_6,sil_score_7,sil_score_8],'.', markersize=12)
                recommended_value=np.sort([sil_score_1,sil_score_2,sil_score_3,sil_score_4,sil_score_5,sil_score_6,sil_score_7,sil_score_8])
                recommended_value=np.argmax(recommended_value, axis=0)
                
                a = np.array([[cnt1,cnt2,cnt3,cnt4,cnt5,cnt6,cnt7,cnt8],[sil_score_1,sil_score_2,sil_score_3,sil_score_4,sil_score_5,sil_score_6,sil_score_7,sil_score_8]])
                a=np.transpose(a); a=a[a[:, 1].argsort()]
                a1=a[:,0]; a2=a[:,1]
                idx_max, value = max(enumerate(a2), key=operator.itemgetter(1))
                recommended_value=a1[idx_max]
            
            elif cnt==7:
                plt.plot([cnt1,cnt2,cnt3,cnt4,cnt5,cnt6,cnt7],[sil_score_1,sil_score_2,sil_score_3,sil_score_4,sil_score_5,sil_score_6,sil_score_7],'.', markersize=12)
                recommended_value=np.sort([sil_score_1,sil_score_2,sil_score_3,sil_score_4,sil_score_5,sil_score_6,sil_score_7])
                recommended_value=np.argmax(recommended_value, axis=0)
                
                a = np.array([[cnt1,cnt2,cnt3,cnt4,cnt5,cnt6,cnt7],[sil_score_1,sil_score_2,sil_score_3,sil_score_4,sil_score_5,sil_score_6,sil_score_7]])
                a=np.transpose(a); a=a[a[:, 1].argsort()]
                a1=a[:,0]; a2=a[:,1]
                idx_max, value = max(enumerate(a2), key=operator.itemgetter(1))
                recommended_value=a1[idx_max]
                
            elif cnt==6:
                plt.plot([cnt1,cnt2,cnt3,cnt4,cnt5,cnt6],[sil_score_1,sil_score_2,sil_score_3,sil_score_4,sil_score_5,sil_score_6],'.', markersize=12)
                recommended_value=np.sort([sil_score_1,sil_score_2,sil_score_3,sil_score_4,sil_score_5,sil_score_6])
                recommended_value=np.argmax(recommended_value, axis=0)
                
                a = np.array([[cnt1,cnt2,cnt3,cnt4,cnt5,cnt6],[sil_score_1,sil_score_2,sil_score_3,sil_score_4,sil_score_5,sil_score_6]])
                a=np.transpose(a); a=a[a[:, 1].argsort()]
                a1=a[:,0]; a2=a[:,1]
                idx_max, value = max(enumerate(a2), key=operator.itemgetter(1))
                recommended_value=a1[idx_max]

            elif cnt==5:
                plt.plot([cnt1,cnt2,cnt3,cnt4,cnt5],[sil_score_1,sil_score_2,sil_score_3,sil_score_4,sil_score_5],'.', markersize=12)
                recommended_value=np.sort([sil_score_1,sil_score_2,sil_score_3,sil_score_4,sil_score_5])
                recommended_value=np.argmax(recommended_value, axis=0)
                
                a = np.array([[cnt1,cnt2,cnt3,cnt4,cnt5],[sil_score_1,sil_score_2,sil_score_3,sil_score_4,sil_score_5]])
                a=np.transpose(a); a=a[a[:, 1].argsort()]
                a1=a[:,0]; a2=a[:,1]
                idx_max, value = max(enumerate(a2), key=operator.itemgetter(1))
                recommended_value=a1[idx_max]
                
            elif cnt==4:
                plt.plot([cnt1,cnt2,cnt3,cnt4],[sil_score_1,sil_score_2,sil_score_3,sil_score_4],'.', markersize=12)
                recommended_value=np.sort([sil_score_1,sil_score_2,sil_score_3,sil_score_4])
                recommended_value=np.argmax(recommended_value, axis=0)
                
                a = np.array([[cnt1,cnt2,cnt3,cnt4],[sil_score_1,sil_score_2,sil_score_3,sil_score_4]])
                a=np.transpose(a); a=a[a[:, 1].argsort()]
                a1=a[:,0]; a2=a[:,1]
                idx_max, value = max(enumerate(a2), key=operator.itemgetter(1))
                recommended_value=a1[idx_max]
                
            elif cnt==3:
                plt.plot([cnt1,cnt2,cnt3],[sil_score_1,sil_score_2,sil_score_3],'.', markersize=12)
                
                a = np.array([[cnt1,cnt2,cnt3],[sil_score_1,sil_score_2,sil_score_3]])
                a=np.transpose(a); a=a[a[:, 1].argsort()]
                a1=a[:,0]; a2=a[:,1]
                idx_max, value = max(enumerate(a2), key=operator.itemgetter(1))
                recommended_value=a1[idx_max]
                
            elif cnt==2:
                plt.plot([cnt1,cnt2],[sil_score_1,sil_score_2],'.', markersize=12)
                recommended_value=np.sort([sil_score_1,sil_score_2])
                recommended_value=np.argmax(recommended_value, axis=0)
                
                a = np.array([[cnt1,cnt2],[sil_score_1,sil_score_2]])
                a=np.transpose(a); a=a[a[:, 1].argsort()]
                a1=a[:,0]; a2=a[:,1]
                idx_max, value = max(enumerate(a2), key=operator.itemgetter(1))
                recommended_value=a1[idx_max]
                
            elif cnt==1:
                plt.plot([cnt1],[sil_score_1],'.', markersize=12)
                recommended_value=[sil_score_1]
                recommended_value=np.argmax(recommended_value, axis=0)
                
                
            recommended_value='recommended class nb: '+ str(recommended_value)
            props = dict(boxstyle='round', facecolor='wheat', alpha=0.5)
            ax.text(0.15, 0.15, recommended_value, transform=ax.transAxes, fontsize=14, verticalalignment='top', bbox=props)
            plt.title('estimate best cluster number')
            plt.ylabel('Silhouette Score'); plt.xlabel('Cluster Number')
            plt.show()
            
            
            
            
            
            
            
            
            
            
            
            
            